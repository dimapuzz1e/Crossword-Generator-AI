name: Build and Release

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  build-installer:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.3"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build with PyInstaller
        run: |
          pyinstaller --windowed --onedir main.py

      - name: Set APP_VERSION environment variable
        run: |
          if ("${{ github.ref_type }}" -eq "tag") {
            $version = "${{ github.ref }}" -replace 'refs/tags/v', ''
          } else {
            $version = 'dev'
          }
          Write-Output "APP_VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        shell: pwsh

      - name: Install Inno Setup
        run: |
          choco install innosetup --no-progress --yes
        shell: pwsh

      - name: Build Installer with Inno Setup
        run: |
          & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" "/Q" "/DMyAppVersion=$env:APP_VERSION" "installer_script.iss"
        shell: pwsh

      - name: List Output Directory
        run: |
          dir Output
        shell: cmd

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: CrosswordGeneratorInstaller
          path: Output\CrosswordGeneratorSetup.exe

  release:
    if: github.ref_type == 'tag'
    needs: build-installer
    runs-on: windows-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: CrosswordGeneratorInstaller
          path: ./

      - name: List Current Directory
        run: |
          dir
        shell: cmd

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: CrosswordGeneratorSetup.exe
          asset_name: CrosswordGeneratorSetup.exe
          asset_content_type: application/octet-stream
